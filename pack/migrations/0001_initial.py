# Generated by Django 2.2.3 on 2019-07-16 07:33

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('trainer', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Days',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('days', models.CharField(choices=[('SUN', 'Sunday'), ('MON', 'Monday'), ('TUE', 'Tuesday'), ('WED', 'Wednesday'), ('THU', 'Thursday'), ('FRI', 'Friday'), ('SAT', 'Saturday')], max_length=3, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='GymPack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('days', models.IntegerField(help_text='Days only valid from 0 to 99999', validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('fee', models.IntegerField(help_text='Fee only valid from 0 to 999999999', validators=[django.core.validators.MaxValueValidator(999999999), django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('a', 'Active'), ('i', 'InActive')], default='a', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='SpecialPack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('session', models.IntegerField(help_text='Days only valid from 0 to 99999', validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('fee', models.IntegerField(help_text='Fee only valid from 0 to 999999999', validators=[django.core.validators.MaxValueValidator(999999999), django.core.validators.MinValueValidator(1)])),
                ('duration_of_session', models.FloatField(help_text='Days only valid from 0 to 99999', validators=[django.core.validators.MaxValueValidator(24), django.core.validators.MinValueValidator(1)])),
                ('time_from', models.TimeField()),
                ('time_to', models.TimeField()),
                ('maximum_seats', models.IntegerField(help_text='Days only valid from 0 to 99999', validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('a', 'Active'), ('i', 'InActive')], default='a', max_length=1)),
                ('days', models.ManyToManyField(to='pack.Days')),
                ('trainer', models.ManyToManyField(to='trainer.Trainer')),
            ],
        ),
        migrations.CreateModel(
            name='PersonalPack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('days', models.IntegerField(help_text='Days only valid from 0 to 99999', validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('session', models.IntegerField(help_text='Days only valid from 0 to 99999', validators=[django.core.validators.MaxValueValidator(99999), django.core.validators.MinValueValidator(1)])),
                ('duration_of_session', models.FloatField(help_text='Days only valid from 0 to 99999', validators=[django.core.validators.MaxValueValidator(24), django.core.validators.MinValueValidator(1)])),
                ('fee', models.IntegerField(help_text='Fee only valid from 0 to 999999999', validators=[django.core.validators.MaxValueValidator(999999999), django.core.validators.MinValueValidator(1)])),
                ('status', models.CharField(choices=[('a', 'Active'), ('i', 'InActive')], default='a', max_length=1)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='trainer.Trainer')),
            ],
        ),
    ]
